apiVersion: v1
kind: Namespace
metadata:
  name: web-app

---
# Persistent Volume for MySQL
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mysql-pvc
  namespace: web-app
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi

---
# MySQL Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mysql
  namespace: web-app
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mysql
  template:
    metadata:
      labels:
        app: mysql
    spec:
      containers:
      - name: mysql
        image: mysql:5.7
        env:
        - name: MYSQL_ROOT_PASSWORD
          value: "password"
        - name: MYSQL_DATABASE
          value: "myappdb"
        - name: MYSQL_USER
          value: "appuser"
        - name: MYSQL_PASSWORD
          value: "password"
        ports:
        - containerPort: 3306
        volumeMounts:
        - name: mysql-storage
          mountPath: /var/lib/mysql
      volumes:
      - name: mysql-storage
        persistentVolumeClaim:
          claimName: mysql-pvc

---
# MySQL Service (Internal Only)
apiVersion: v1
kind: Service
metadata:
  name: mysql
  namespace: web-app
spec:
  selector:
    app: mysql
  ports:
    - protocol: TCP
      port: 3306
      targetPort: 3306
  clusterIP: None  # Headless service for direct pod access

---
# Apache Tomcat Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: tomcat
  namespace: web-app
spec:
  replicas: 1
  selector:
    matchLabels:
      app: tomcat
  template:
    metadata:
      labels:
        app: tomcat
    spec:
      containers:
      - name: tomcat
        image: tomcat:9.0
        ports:
        - containerPort: 8080
        env:
        - name: DATABASE_HOST
          value: "mysql"
        - name: DATABASE_USER
          value: "appuser"
        - name: DATABASE_PASSWORD
          value: "password"

---
# Tomcat Service (Internal & External)
apiVersion: v1
kind: Service
metadata:
  name: tomcat
  namespace: web-app
spec:
  type: NodePort  # Change from ClusterIP
  selector:
    app: tomcat
  ports:
    - protocol: TCP
      port: 80
      targetPort: 8080
      nodePort: 30080  # Kubernetes will expose this port on the VM

